# app.py
import os
import re
import streamlit as st
from main import run  # uses your existing CrewAI pipeline

st.set_page_config(
    page_title="AI Stock Trading Advisor",
    page_icon="ðŸ“ˆ",
    layout="centered"
)

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Sidebar
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
st.sidebar.title("About This App")

st.sidebar.markdown("""
### Tech Stack
- CrewAI â€“ Multi-Agent Orchestration  
- Groq Llama 3.3 70B â€“ LLM Reasoning Engine  
- Streamlit â€“ Interactive Frontend  
- Yahoo Finance API â€“ Live Market Data  
""")

st.sidebar.markdown("---")

st.sidebar.markdown("""
### Author
**Alhad Bhadekar**<br>Software Development Engineer
""", unsafe_allow_html=True)

st.sidebar.markdown("---")

st.sidebar.markdown("""
### Disclaimer
This application has been developed **solely for educational and entertainment purposes**.  
It does **not constitute financial advice**, and the developers **do not guarantee accuracy or completeness** of market data or model outputs.  
Always perform your own due diligence and **consult a licensed financial advisor** before making any investment decisions.
""")

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Header
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
st.markdown(
    "<h1 style='text-align:center; color:#B8860B;'>ðŸ“‰ AI Stock Trading Advisor ðŸ“ˆ</h1>",
    unsafe_allow_html=True
)
st.markdown(
    "<p style='text-align:center;'>Powered by CrewAI â€¢ Groq Llama 3.3 â€¢ Yahoo Finance</p>",
    unsafe_allow_html=True
)

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Input form
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
with st.form(key="stock_form"):
    stock_symbol = st.text_input(
        "Enter Stock Symbol (e.g. AAPL, TSLA, NVDA):",
        placeholder="Type a stock ticker symbol..."
    ).upper().strip()
    submitted = st.form_submit_button("Analyze Stock")

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Run Analysis
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
if submitted:
    if not stock_symbol:
        st.warning("Please enter a stock symbol.")
    else:
        st.info(f"Fetching and analyzing {stock_symbol}...")
        with st.spinner("Agents analyzing..."):
            try:
                # main.py returns {"analysis": str, "decision": str}
                result = run(stock_symbol)
            except Exception as e:
                st.error(f"Error while analyzing {stock_symbol}: {e}")
                st.stop()

        analysis = str(result.get("analysis", "")).strip()
        decision = str(result.get("decision", "")).strip()

        # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
        # Display
        # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
        st.success("Analysis complete.")
        st.markdown("---")

        st.subheader("Analyst Insights")

        # 1) Clean CrewAI internal logs from analysis
        clean_lines = []
        if analysis:
            for line in analysis.splitlines():
                l = line.strip()
                if not l.lower().startswith(("thought:", "action:", "observation:")):
                    clean_lines.append(l)
        clean_analysis = "\n".join(clean_lines).strip()

        # 2) Fallback if empty
        if not clean_analysis:
            clean_analysis = (
                "No direct market summary was generated by the Analyst Agent. "
                "This usually occurs if the stock API or CrewAI task returned internal logs only. "
                "Please try again or verify your data source."
            )

        # 3) Highlight common metrics
        formatted_analysis = re.sub(
            r"(?i)\b(current price|price|daily change|change %|percentage change|day high|day low|high|low|volume|volatility|momentum)\b",
            lambda m: f"<strong>{m.group(1).title()}</strong>",
            clean_analysis
        )

        # 4) Styled Market Summary
        styled_analysis = f"""
        <div style="
            background-color:#1E1E1E;
            padding:20px;
            border-radius:15px;
            border:1px solid #3E3E3E;
            font-family:'Helvetica Neue',sans-serif;
            color:#EAEAEA;
            line-height:1.6;
            font-size:1.05em;
        ">
        <h3 style="color:#B8860B; margin-top:0;">Market Summary</h3>
        <p style="margin:0; white-space:pre-wrap;">{formatted_analysis}</p>
        </div>
        """
        st.markdown(styled_analysis, unsafe_allow_html=True)

        # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
        # Trader Recommendation
        # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
        st.subheader("Trader Recommendation")

        # Color by rec
        color = "#EAEAEA"
        if decision:
            up = decision.upper()
            if "BUY" in up:
                color = "#00FF7F"
            elif "SELL" in up:
                color = "#FF6347"
            elif "HOLD" in up:
                color = "#FFD700"
        else:
            decision = "No trading recommendation generated."

        # Normalize decision text:
        #  - Remove any '--- TRADING DECISION ---' or '--- Trading Decision'
        #  - Remove leading '---' before Recommendation
        decision_norm = re.sub(
            r"(?i)---\s*trading\s*decision\s*---?",  # strip banner entirely
            "",
            decision
        )
        decision_norm = re.sub(r"^\s*-{2,}\s*", "", decision_norm).strip()  # leading --- cleanup

        # Force "Reason" onto a new line after Recommendation
        # Handles: "Recommendation: BUY Reason: ...."
        formatted_decision = re.sub(
            r"(?i)Recommendation:\s*(BUY|SELL|HOLD)\s*Reason:\s*",
            r"<strong>Recommendation:</strong> \1<br><br><strong>Reason:</strong> ",
            decision_norm
        )

        # If the text still starts with '--- Recommendation', drop the dashes
        formatted_decision = re.sub(
            r"^\s*-{2,}\s*(?=Recommendation:)", "", formatted_decision
        )

        # Styled display
        styled_block = f"""
        <div style="
            background-color:#2B2B2B;
            padding:20px;
            border-radius:15px;
            border:1px solid #3E3E3E;
            font-family:'Helvetica Neue',sans-serif;
            color:#EAEAEA;
            line-height:1.6;
            font-size:1.05em;
        ">
        <h3 style="color:{color}; margin-top:0;">Trading Decision</h3>
        <p style="margin:0;">{formatted_decision}</p>
        </div>
        """
        st.markdown(styled_block, unsafe_allow_html=True)

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Footer
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
st.markdown("""
<hr>
<div style='text-align:center; font-size:0.9em; line-height:1.6;'>
    <p>Â© 2025 AI Stock Crew | Developed by <strong>Alhad Bhadekar</strong></p>
    <p style='max-width:700px; margin:auto; font-size:0.85em; color:#BBBBBB;'>
        <em>
        Disclaimer: This application has been developed solely for educational and entertainment purposes.
        It does not constitute financial advice, and the developers do not guarantee the accuracy or completeness
        of market data or AI-generated insights. Always perform your own due diligence and consult a licensed
        financial advisor before making any investment decisions.
        </em>
    </p>
</div>
""", unsafe_allow_html=True)
